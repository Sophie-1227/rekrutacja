# Generated by Django 4.2.7 on 2023-12-04 18:14

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=6)),
                ('city', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=100)),
                ('building_number', models.CharField(max_length=10)),
                ('apartment_number', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference', models.IntegerField(max_length=1)),
                ('faculty', models.CharField(max_length=3)),
                ('major', models.CharField(max_length=3)),
                ('tour', models.IntegerField(max_length=1)),
                ('score', models.IntegerField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Documents_achivment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achivment_type', models.CharField(max_length=100)),
                ('achivment_result', models.CharField(max_length=50)),
                ('achivment_year', models.IntegerField(max_length=4)),
                ('achivment_issuer', models.CharField(max_length=100)),
                ('achivment_city', models.CharField(max_length=100)),
                ('achivment_country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Documents_dyploma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dyploma_type', models.CharField(max_length=100)),
                ('dyploma_result', models.CharField(max_length=3)),
                ('dyploma_avg', models.DecimalField(decimal_places=3, max_digits=5)),
                ('dyploma_year', models.IntegerField(max_length=4)),
                ('dyploma_issuer', models.CharField(max_length=100)),
                ('dyploma_city', models.CharField(max_length=100)),
                ('dyploma_country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Documents_matura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(max_length=100)),
                ('exam_year', models.IntegerField(max_length=4)),
                ('exam_number', models.CharField(max_length=13)),
                ('exam_issuer', models.CharField(max_length=100)),
                ('exam_city', models.CharField(max_length=100)),
                ('exam_country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='High_school',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_type', models.CharField(choices=[('Liceum Ogólnokształcące', 'Liceum Ogólnokształcące'), ('Liceum Profilowane', 'Liceum Profilowane'), ('Technikum', 'TECHNIKUM'), ('Branżowa Szkoła II Stopnia ', 'Branżowa Szkoła II Stopnia')], max_length=100)),
                ('school_name', models.CharField(max_length=200)),
                ('school_country', models.CharField(max_length=100)),
                ('school_city', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Matura_results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polski_p', models.IntegerField(max_length=3)),
                ('polski_r', models.IntegerField(max_length=3)),
                ('matematyka_p', models.IntegerField(max_length=3)),
                ('matematyka_r', models.IntegerField(max_length=3)),
                ('angielski_p', models.IntegerField(max_length=3)),
                ('angielski_r', models.IntegerField(max_length=3)),
                ('fizyka_p', models.IntegerField(max_length=3)),
                ('fizyka_r', models.IntegerField(max_length=3)),
                ('chemia_p', models.IntegerField(max_length=3)),
                ('chemia_r', models.IntegerField(max_length=3)),
                ('geografia_p', models.IntegerField(max_length=3)),
                ('geografia_r', models.IntegerField(max_length=3)),
                ('biologia_p', models.IntegerField(max_length=3)),
                ('biologia_r', models.IntegerField(max_length=3)),
                ('informatyka_p', models.IntegerField(max_length=3)),
                ('informatyka_r', models.IntegerField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Personal_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pesel', models.IntegerField(max_length=11)),
                ('first_name', models.CharField(max_length=100)),
                ('second_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.IntegerField(max_length=9)),
                ('father_name', models.CharField(max_length=100)),
                ('is_polish', models.CharField(choices=[('Tak', 'tak'), ('Nie', 'nie')], default='Tak', max_length=3)),
                ('sex', models.CharField(choices=[('Kobieta', 'Kobieta'), ('Mężczyzna', 'Mężczyzna'), ('Inna', 'Inna')], max_length=9)),
            ],
        ),
    ]
